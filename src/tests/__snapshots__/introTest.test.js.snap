// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LogIn form behaviour Renders correctly LoginScreen 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Object {
      "flex": 1,
    }
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  scrollEnabled={false}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    Object {
      "backgroundColor": "#e6e6e6",
    }
  }
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "paddingTop": 0,
        }
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "width": "100%",
          }
        }
      >
        <Image
          source={1}
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "alignSelf": "flex-end",
                "color": "#000000",
                "fontSize": 18,
                "fontWeight": "bold",
                "marginRight": 15,
                "marginTop": 15,
                "textAlign": "center",
              }
            }
          >
            Sign up
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Image
            resizeMode="contain"
            source={1}
            style={
              Object {
                "height": "20%",
                "width": "32%",
              }
            }
          />
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "textAlign": "left",
                },
                Array [
                  Object {
                    "color": "rgba(0, 0, 0, 0.87)",
                    "fontFamily": "System",
                    "fontWeight": "500",
                    "textAlign": "left",
                    "writingDirection": "ltr",
                  },
                  Array [
                    Object {
                      "fontSize": 20,
                      "letterSpacing": 0.15,
                      "lineHeight": 30,
                      "marginVertical": 2,
                    },
                    Object {
                      "fontSize": 24,
                      "fontWeight": "bold",
                      "marginBottom": 30,
                      "marginTop": 20,
                    },
                  ],
                ],
              ]
            }
          >
            Tripver
          </Text>
          <View>
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              autoCompleteType="email"
              keyboardType="email-address"
              label="Email"
              onChangeText={[Function]}
              placeholder="Email"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 30,
                  "fontSize": 15,
                  "height": 44,
                  "marginBottom": 10,
                  "marginTop": 10,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 625,
                }
              }
              underlineColorAndroid="transparent"
            />
          </View>
          <View>
            <TextInput
              allowFontScaling={true}
              label="Password"
              onChangeText={[Function]}
              placeholder="Password"
              rejectResponderTermination={true}
              secureTextEntry={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 30,
                  "fontSize": 15,
                  "height": 44,
                  "marginBottom": 10,
                  "marginTop": 10,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 625,
                }
              }
              textContentType="password"
              underlineColorAndroid="transparent"
            />
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#f0b65f",
                "borderRadius": 30,
                "marginTop": 30,
                "opacity": 1,
                "padding": 10,
                "position": "relative",
                "width": "83%",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Log In
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginTop": 30,
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "height": 1,
                  "width": "35%",
                }
              }
            />
            <View>
              <Text
                style={
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 10,
                    "textAlign": "center",
                    "width": 50,
                  }
                }
              >
                OR
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "height": 1,
                  "width": "35%",
                }
              }
            />
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 30,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "margin": 8,
                "marginTop": 30,
                "opacity": 1,
                "padding": 10,
                "width": "50%",
              }
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "height": "120%",
                  "marginLeft": 0,
                  "marginTop": -2,
                  "width": "15%",
                }
              }
            />
            <Text
              style={
                Object {
                  "alignItems": "center",
                  "color": "#000000",
                  "flex": 1,
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "marginLeft": 15,
                  "marginRight": 35,
                  "textAlign": "center",
                }
              }
            >
              Google
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`Renders correctly SignUpScreen 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Object {
      "flex": 1,
    }
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  scrollEnabled={false}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    Object {
      "backgroundColor": "#e6e6e6",
    }
  }
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "paddingTop": 0,
        }
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "width": "100%",
          }
        }
      >
        <Image
          source={1}
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
              undefined,
            ]
          }
        />
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "alignSelf": "flex-end",
                "color": "#000000",
                "fontSize": 18,
                "fontWeight": "bold",
                "marginRight": 15,
                "marginTop": 15,
                "textAlign": "center",
              }
            }
          >
            Log In
          </Text>
        </View>
        <Image
          resizeMode="contain"
          source={1}
          style={
            Object {
              "height": "20%",
              "marginBottom": 40,
              "marginLeft": 30,
              "marginTop": 0,
              "width": "34%",
            }
          }
        />
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
                "textAlign": "left",
              },
              Array [
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "System",
                  "fontWeight": "500",
                  "textAlign": "left",
                  "writingDirection": "ltr",
                },
                Array [
                  Object {
                    "fontSize": 20,
                    "letterSpacing": 0.15,
                    "lineHeight": 30,
                    "marginVertical": 2,
                  },
                  Object {
                    "fontSize": 30,
                    "fontWeight": "bold",
                    "marginBottom": 80,
                    "marginLeft": 40,
                  },
                ],
              ],
            ]
          }
        >
          Welcome to Tripver
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#f0b65f",
                "borderRadius": 30,
                "opacity": 1,
                "padding": 10,
                "position": "relative",
                "width": "83%",
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "textAlign": "center",
                }
              }
            >
              Create account
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 30,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "margin": 8,
                "marginTop": 30,
                "opacity": 1,
                "padding": 10,
                "width": "83%",
              }
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "height": "110%",
                  "marginLeft": 0,
                  "marginTop": -1,
                  "width": "8%",
                }
              }
            />
            <Text
              style={
                Object {
                  "alignItems": "center",
                  "color": "#000000",
                  "flex": 1,
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "marginLeft": 15,
                  "marginRight": 35,
                  "textAlign": "center",
                }
              }
            >
              Continue with Google
            </Text>
          </View>
          <Text
            style={
              Object {
                "bottom": 0,
                "color": "#FFFFFF",
                "fontSize": 12,
                "left": 0,
                "margin": 20,
                "marginBottom": 50,
                "position": "absolute",
                "right": 0,
              }
            }
          >
            By typing Continue or Create Account, I agree to Tripver's 
            <Text
              onPress={[Function]}
              style={
                Object {
                  "textDecorationLine": "underline",
                }
              }
            >
              Terms of Service, Privacy Policy and Nondicrimination Policy.
            </Text>
          </Text>
          <View
            style={
              Object {
                "bottom": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "left": 0,
                "marginBottom": 20,
                "position": "absolute",
                "right": 0,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FFFFFF",
                }
              }
            >
              In colaboration with
            </Text>
            <Image
              resizeMode="contain"
              source={1}
              style={
                Object {
                  "alignSelf": "center",
                  "height": "150%",
                  "width": "28%",
                }
              }
            />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;

exports[`SignUp form behaviour Renders correctly LoginScreen 1`] = `
<RCTScrollView
  automaticallyAdjustContentInsets={false}
  contentContainerStyle={
    Object {
      "flex": 1,
    }
  }
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  enableAutomaticScroll={true}
  enableOnAndroid={false}
  enableResetScrollToCoords={true}
  extraHeight={75}
  extraScrollHeight={0}
  getScrollResponder={[Function]}
  handleOnScroll={[Function]}
  keyboardDismissMode="interactive"
  keyboardOpeningTime={250}
  keyboardSpace={0}
  onScroll={[Function]}
  resetKeyboardSpace={[Function]}
  resetScrollToCoords={
    Object {
      "x": 0,
      "y": 0,
    }
  }
  scrollEnabled={false}
  scrollEventThrottle={1}
  scrollForExtraHeightOnAndroid={[Function]}
  scrollIntoView={[Function]}
  scrollToEnd={[Function]}
  scrollToFocusedInput={[Function]}
  scrollToPosition={[Function]}
  showsVerticalScrollIndicator={true}
  style={
    Object {
      "backgroundColor": "#e6e6e6",
    }
  }
  update={[Function]}
  viewIsInsideTabBar={false}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "transparent",
          "flex": 1,
          "paddingTop": 0,
        }
      }
    >
      <View
        accessibilityIgnoresInvertColors={true}
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "width": "100%",
          }
        }
      >
        <Image
          source={1}
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "height": "100%",
                "width": "100%",
              },
              undefined,
            ]
          }
        />
        <Text />
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 30,
                "marginBottom": 60,
                "marginTop": -10,
              }
            }
          >
            Let's get started!
          </Text>
          <View>
            <Text
              style={
                Object {
                  "color": "#000000",
                  "fontWeight": "bold",
                  "marginLeft": 10,
                }
              }
            >
              Name
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCompleteType="name"
              keyboardType="default"
              label="Name"
              maxLength={16}
              onChangeText={[Function]}
              placeholder="Name"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 30,
                  "fontSize": 15,
                  "height": 44,
                  "marginBottom": 30,
                  "marginTop": 10,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 625,
                }
              }
              underlineColorAndroid="transparent"
            />
          </View>
          <View>
            <Text
              style={
                Object {
                  "color": "#000000",
                  "fontWeight": "bold",
                  "marginLeft": 10,
                }
              }
            >
              Email
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              autoCompleteType="email"
              keyboardType="email-address"
              label="Email"
              onChangeText={[Function]}
              placeholder="Email"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 30,
                  "fontSize": 15,
                  "height": 44,
                  "marginBottom": 30,
                  "marginTop": 10,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 625,
                }
              }
              underlineColorAndroid="transparent"
            />
          </View>
          <View>
            <Text
              style={
                Object {
                  "color": "#000000",
                  "fontWeight": "bold",
                  "marginLeft": 10,
                }
              }
            >
              Password
            </Text>
            <TextInput
              allowFontScaling={true}
              autoCompleteType="password"
              label="Password"
              onChangeText={[Function]}
              placeholder="Password"
              rejectResponderTermination={true}
              secureTextEntry={true}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 30,
                  "fontSize": 15,
                  "height": 44,
                  "marginBottom": 30,
                  "marginTop": 10,
                  "paddingHorizontal": 10,
                  "paddingVertical": 5,
                  "width": 625,
                }
              }
              textContentType="password"
              underlineColorAndroid="transparent"
            />
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#f0b65f",
                "borderRadius": 30,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "margin": 8,
                "marginTop": 30,
                "opacity": 1,
                "padding": 10,
                "width": "50%",
              }
            }
          >
            <Text
              style={
                Object {
                  "alignItems": "center",
                  "color": "#FFFFFF",
                  "flex": 1,
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "marginLeft": 15,
                  "textAlign": "center",
                }
              }
            >
              Next
            </Text>
            <Text />
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</RCTScrollView>
`;
